<svg viewBox="0 0 900 1400" xmlns="http://www.w3.org/2000/svg">
  <!-- Style definitions -->
  <defs>
    <style>
      .terminator { fill: #e8f5e8; stroke: #4a7c59; stroke-width: 2; }
      .process { fill: #e3f2fd; stroke: #1976d2; stroke-width: 2; }
      .subroutine { fill: #fff3e0; stroke: #f57c00; stroke-width: 2; }
      .input-output { fill: #fce4ec; stroke: #c2185b; stroke-width: 2; }
      .loop { fill: #f3e5f5; stroke: #7b1fa2; stroke-width: 2; }
      .text { font-family: Arial, sans-serif; font-size: 10px; text-anchor: middle; }
      .arrow { stroke: #333; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .small-text { font-size: 9px; }
      .tiny-text { font-size: 8px; }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" 
            refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#333" />
    </marker>
  </defs>

  <!-- Start -->
  <ellipse cx="450" cy="30" rx="70" ry="20" class="terminator"/>
  <text x="450" y="35" class="text">MULAI PROGRAM</text>

  <!-- Import modules -->
  <rect x="360" y="70" width="180" height="30" class="process"/>
  <text x="450" y="85" class="text">Import modul numpy, pandas,</text>
  <text x="450" y="95" class="text small-text">matplotlib, find_peaks</text>

  <!-- Read Excel file -->
  <polygon points="360,120 540,120 520,150 380,150" class="input-output"/>
  <text x="450" y="135" class="text">Baca file Excel</text>
  <text x="450" y="145" class="text small-text">'Simple pendulum data.xlsx' ke df</text>

  <!-- Extract data -->
  <rect x="360" y="170" width="180" height="40" class="process"/>
  <text x="450" y="185" class="text">Ekstrak data:</text>
  <text x="450" y="195" class="text small-text">lengths = df.iloc[:,0].values</text>
  <text x="450" y="205" class="text small-text">actual_times = df.iloc[:,1].values</text>

  <!-- Set parameters -->
  <rect x="360" y="230" width="180" height="40" class="process"/>
  <text x="450" y="245" class="text">Set parameter umum:</text>
  <text x="450" y="255" class="text small-text">g, theta0, omega0, h, t_max</text>
  <text x="450" y="265" class="text small-text">Inisialisasi list results = []</text>

  <!-- Start main loop -->
  <polygon points="400,290 500,290 520,320 480,350 420,350 380,320" class="loop"/>
  <text x="450" y="315" class="text">Untuk setiap L di lengths</text>
  <text x="450" y="325" class="text small-text">(dan indeks i yang sesuai)</text>

  <!-- Initialize row dictionary -->
  <rect x="360" y="370" width="180" height="40" class="process"/>
  <text x="450" y="385" class="text">Inisialisasi dictionary 'row':</text>
  <text x="450" y="395" class="text small-text">Length (m) = L</text>
  <text x="450" y="405" class="text small-text">Actual Time (s) = actual_times[i]</text>

  <!-- Method loop -->
  <rect x="360" y="430" width="180" height="30" class="process"/>
  <text x="450" y="445" class="text">Untuk setiap metode:</text>
  <text x="450" y="455" class="text small-text">Euler, RK1, RK2, RK3, RK4</text>

  <!-- Simulate subroutine -->
  <rect x="365" y="480" width="170" height="30" class="subroutine"/>
  <line x1="375" y1="480" x2="375" y2="510" stroke="#f57c00" stroke-width="2"/>
  <line x1="525" y1="480" x2="525" y2="510" stroke="#f57c00" stroke-width="2"/>
  <text x="450" y="495" class="text">Panggil simulate</text>
  <text x="450" y="505" class="text small-text">(method, L)</text>

  <!-- Estimate period subroutine -->
  <rect x="365" y="530" width="170" height="30" class="subroutine"/>
  <line x1="375" y1="530" x2="375" y2="560" stroke="#f57c00" stroke-width="2"/>
  <line x1="525" y1="530" x2="525" y2="560" stroke="#f57c00" stroke-width="2"/>
  <text x="450" y="545" class="text">Panggil estimate_period</text>
  <text x="450" y="555" class="text small-text">(t, theta)</text>

  <!-- Calculate relative error subroutine -->
  <rect x="365" y="580" width="170" height="30" class="subroutine"/>
  <line x1="375" y1="580" x2="375" y2="610" stroke="#f57c00" stroke-width="2"/>
  <line x1="525" y1="580" x2="525" y2="610" stroke="#f57c00" stroke-width="2"/>
  <text x="450" y="595" class="text">Panggil relative_error</text>
  <text x="450" y="605" class="text small-text">(actual, est_T)</text>

  <!-- Store method results -->
  <rect x="360" y="630" width="180" height="50" class="process"/>
  <text x="450" y="645" class="text">Simpan hasil ke 'row':</text>
  <text x="450" y="655" class="text small-text">row[method] = est_T</text>
  <text x="450" y="665" class="text small-text">row[method + ' Rel Error (%)']</text>
  <text x="450" y="675" class="text small-text">= relative_error_result</text>

  <!-- Loop back arrow for methods -->
  <path d="M 540 655 L 580 655 L 580 445 L 540 445" class="arrow"/>
  <text x="590" y="545" class="text tiny-text">Metode</text>
  <text x="590" y="555" class="text tiny-text">berikutnya</text>

  <!-- Add row to results -->
  <rect x="360" y="700" width="180" height="30" class="process"/>
  <text x="450" y="715" class="text">Tambahkan dictionary 'row'</text>
  <text x="450" y="725" class="text small-text">ke list 'results'</text>

  <!-- End main loop -->
  <polygon points="400,750 500,750 520,780 480,810 420,810 380,780" class="loop"/>
  <text x="450" y="775" class="text">Akhir loop</text>
  <text x="450" y="785" class="text small-text">(Setelah semua L selesai)</text>

  <!-- Loop back arrow -->
  <path d="M 380 780 L 320 780 L 320 320 L 380 320" class="arrow"/>
  <text x="300" y="550" class="text tiny-text">L berikutnya</text>

  <!-- Create DataFrame -->
  <rect x="360" y="830" width="180" height="30" class="process"/>
  <text x="450" y="845" class="text">Buat DataFrame 'result_df'</text>
  <text x="450" y="855" class="text small-text">dari list 'results'</text>

  <!-- Print DataFrame -->
  <polygon points="360,880 540,880 520,910 380,910" class="input-output"/>
  <text x="450" y="895" class="text">Cetak DataFrame 'result_df'</text>

  <!-- Save to Excel -->
  <polygon points="360,930 540,930 520,960 380,960" class="input-output"/>
  <text x="450" y="945" class="text">Simpan DataFrame ke file Excel</text>
  <text x="450" y="955" class="text small-text">'pendulum_result_relative_error.xlsx'</text>

  <!-- End -->
  <ellipse cx="450" cy="1000" rx="70" ry="20" class="terminator"/>
  <text x="450" y="1005" class="text">SELESAI PROGRAM</text>

  <!-- Main flow arrows -->
  <line x1="450" y1="50" x2="450" y2="70" class="arrow"/>
  <line x1="450" y1="100" x2="450" y2="120" class="arrow"/>
  <line x1="450" y1="150" x2="450" y2="170" class="arrow"/>
  <line x1="450" y1="210" x2="450" y2="230" class="arrow"/>
  <line x1="450" y1="270" x2="450" y2="290" class="arrow"/>
  <line x1="450" y1="350" x2="450" y2="370" class="arrow"/>
  <line x1="450" y1="410" x2="450" y2="430" class="arrow"/>
  <line x1="450" y1="460" x2="450" y2="480" class="arrow"/>
  <line x1="450" y1="510" x2="450" y2="530" class="arrow"/>
  <line x1="450" y1="560" x2="450" y2="580" class="arrow"/>
  <line x1="450" y1="610" x2="450" y2="630" class="arrow"/>
  <line x1="450" y1="680" x2="450" y2="700" class="arrow"/>
  <line x1="450" y1="730" x2="450" y2="750" class="arrow"/>
  <line x1="450" y1="810" x2="450" y2="830" class="arrow"/>
  <line x1="450" y1="860" x2="450" y2="880" class="arrow"/>
  <line x1="450" y1="910" x2="450" y2="930" class="arrow"/>
  <line x1="450" y1="960" x2="450" y2="980" class="arrow"/>

  <!-- Legend -->
  <g transform="translate(650, 50)">
    <text x="0" y="0" class="text" style="font-weight: bold;">LEGEND:</text>
    
    <ellipse cx="25" cy="20" rx="20" ry="10" class="terminator"/>
    <text x="55" y="25" class="text small-text">Terminator</text>
    
    <rect x="5" y="40" width="40" height="15" class="process"/>
    <text x="55" y="52" class="text small-text">Process</text>
    
    <rect x="8" y="65" width="34" height="15" class="subroutine"/>
    <line x1="12" y1="65" x2="12" y2="80" stroke="#f57c00" stroke-width="1"/>
    <line x1="38" y1="65" x2="38" y2="80" stroke="#f57c00" stroke-width="1"/>
    <text x="55" y="77" class="text small-text">Subroutine Call</text>
    
    <polygon points="5,90 45,90 40,105 10,105" class="input-output"/>
    <text x="55" y="102" class="text small-text">Input/Output</text>
    
    <polygon points="15,115 35,115 45,130 25,145 15,145 5,130" class="loop"/>
    <text x="55" y="132" class="text small-text">Loop</text>

    <!-- Function descriptions -->
    <text x="0" y="170" class="text" style="font-weight: bold;">FUNGSI:</text>
    <text x="0" y="190" class="text small-text">• simulate(): Simulasi pendulum</text>
    <text x="0" y="205" class="text small-text">• estimate_period(): Hitung periode</text>
    <text x="0" y="220" class="text small-text">• relative_error(): Hitung error relatif</text>
    
    <text x="0" y="250" class="text" style="font-weight: bold;">METODE NUMERIK:</text>
    <text x="0" y="270" class="text small-text">• Euler (RK1)</text>
    <text x="0" y="285" class="text small-text">• Runge-Kutta 2 (RK2)</text>
    <text x="0" y="300" class="text small-text">• Runge-Kutta 3 (RK3)</text>
    <text x="0" y="315" class="text small-text">• Runge-Kutta 4 (RK4)</text>
  </g>

  <!-- Data flow annotations -->
  <g transform="translate(50, 400)">
    <text x="0" y="0" class="text" style="font-weight: bold;">DATA FLOW:</text>
    <text x="0" y="20" class="text tiny-text">1. Untuk setiap panjang L:</text>
    <text x="0" y="35" class="text tiny-text">   - Buat dictionary 'row'</text>
    <text x="0" y="50" class="text tiny-text">   - Untuk setiap metode numerik:</text>
    <text x="0" y="65" class="text tiny-text">     * Simulasi → Estimasi Periode</text>
    <text x="0" y="80" class="text tiny-text">     * Hitung Relative Error</text>
    <text x="0" y="95" class="text tiny-text">     * Simpan hasil ke 'row'</text>
    <text x="0" y="110" class="text tiny-text">   - Tambahkan 'row' ke 'results'</text>
    <text x="0" y="125" class="text tiny-text">2. Buat DataFrame dari 'results'</text>
    <text x="0" y="140" class="text tiny-text">3. Output dan simpan hasil</text>
  </g>
</svg>